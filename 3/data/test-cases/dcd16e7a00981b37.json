{"uid":"dcd16e7a00981b37","name":"TC_11.02.02.01_10 with parameters: pl, gb, NoReg","fullName":"tests.US_11_Education.US_11-02-02_Shares_trading.US_11-02-02-01_Shares_trading_test.TestSharesTradingItems#test_10_block_vert_banner_button","historyId":"9a11ce21139f48396bc9c78e1291fdac","time":{"start":1702510117110,"stop":1702510123220,"duration":6110},"description":"\n                Check the [Button] on the Vertical side banner at the bottom of the page.\n                For \"Authorized user\" role:\n                The trading platform page is opened depend on the banner [type-id]:\n                        Live mode if the banner in the Live mode banners list\n                        Demo mode if the banner in the Demo mode banners list\n                ","descriptionHtml":"<pre><code>            Check the [Button] on the Vertical side banner at the bottom of the page.\n            For &quot;Authorized user&quot; role:\n            The trading platform page is opened depend on the banner [type-id]:\n                    Live mode if the banner in the Live mode banners list\n                    Demo mode if the banner in the Demo mode banners list\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: \n2023-12-13 23:28:43.218666   The Vertical banner [type-id=292] is Not in the Test List","statusTrace":"self = <US_11-02-02-01_Shares_trading_test.TestSharesTradingItems object at 0x000001842D564AD0>\nworker_id = 'master'\nd = <selenium.webdriver.edge.webdriver.WebDriver (session=\"9a77e020dbef8fdfc076796c83ef940d\")>\ncur_language = 'pl', cur_country = 'gb', cur_role = 'NoReg'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/pl/trade-stocks'\n\n    @allure.step(\"Start test of button in block [Vertical banner]\")\n    # @pytest.mark.skip(reason=\"Skipped for debugging\")\n    def test_10_block_vert_banner_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password,\n            cur_item_link):\n        \"\"\"\n                Check the [Button] on the Vertical side banner at the bottom of the page.\n                For \"Authorized user\" role:\n                The trading platform page is opened depend on the banner [type-id]:\n                        Live mode if the banner in the Live mode banners list\n                        Demo mode if the banner in the Demo mode banners list\n                \"\"\"\n    \n        print(f\"\\n{datetime.now()}   Работает obj {self} с именем TC_11.02.02.01_10\")\n        build_dynamic_arg_v3(self, d, worker_id, cur_language, cur_country, cur_role,\n                             \"11.02.02\", \"Educations > Menu item [Shares trading]\",\n                             \".01_10\", \"Testing button in block [Vertical banner]\")\n    \n        check_language(cur_language)\n        if cur_language in [\"\", \"ar\", \"cn\"]:\n            Common().skip_test_for_language(cur_language)\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        # банеры должны открываться в Demo mode for US_00\n        banner00_ver_tpd = []\n        # банеры должны открываться в Live mode for US_00\n        banner00_ver_tp = []\n        # банеры должны открываться в Demo mode for US_01\n        banner01_ver_tpd = ['251', '253', '380', '168', '222', '393']\n        # банеры должны открываться в Live mode for US_01\n        banner01_ver_tp = ['198', '293', '381', '391', '426']\n    \n        test_element = ButtonOnVerticalBanner(d, cur_item_link)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link,\n                                        banner00_ver_tpd, banner00_ver_tp, banner01_ver_tpd, banner01_ver_tp)\n\ntests\\US_11_Education\\US_11-02-02_Shares_trading\\US_11-02-02-01_Shares_trading_test.py:348: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.Elements.ButtonOnVerticalBanner.ButtonOnVerticalBanner object at 0x000001842D996350>\nd = <selenium.webdriver.edge.webdriver.WebDriver (session=\"9a77e020dbef8fdfc076796c83ef940d\")>\ncur_language = 'pl', cur_country = 'gb', cur_role = 'NoReg'\nlink = 'https://capital.com/pl/trade-stocks', banner00_ver_tpd = []\nbanner00_ver_tp = []\nbanner01_ver_tpd = ['251', '253', '380', '168', '222', '393']\nbanner01_ver_tp = ['198', '293', '381', '391', '426']\n\n    def full_test_with_tpi(self, d, cur_language, cur_country, cur_role, link, banner00_ver_tpd, banner00_ver_tp,\n                           banner01_ver_tpd, banner01_ver_tp):\n        tpd = False\n        self.arrange_(link)\n    \n        # Checking if [SignUP for is popped up on the page]\n        page_signup_login = SignupLogin(d, link)\n        page_signup_login.check_popup_signup_form()\n    \n        data_id = self.element_click()\n        # проверка Demo mode\n        if data_id in banner00_ver_tpd or data_id in banner01_ver_tpd:\n            tpd = True\n        # проверка, что баннер учтен в матрице покрытия\n        if (data_id in banner00_ver_tp or data_id in banner01_ver_tp\n                or data_id in banner00_ver_tpd or data_id in banner01_ver_tpd):\n            test_element = AssertClass(d, link)\n            match cur_role:\n                case \"NoReg\":\n                    test_element.assert_signup(d, cur_language, link)\n                case \"Reg/NoAuth\":\n                    test_element.assert_login(d, cur_language, link)\n                case \"Auth\":\n                    if tpd:\n                        print(f\"{datetime.now()}   For Vertical banner [type-id={data_id}] Trading platform should be open \"\n                              f\"in Demo Mode =>\")\n                    else:\n                        print(f\"{datetime.now()}   For Vertical banner [type-id={data_id}] Trading platform should be open \"\n                              f\"in Live Mode =>\")\n                    test_element.assert_trading_platform_v4(d, link, tpd)\n        else:\n            print(f\"\\n{datetime.now()}   The Vertical banner [type-id={data_id}] is Not in the Test List \")\n>           assert False, f\"\\n{datetime.now()}   The Vertical banner [type-id={data_id}] is Not in the Test List \"\nE           AssertionError: \nE           2023-12-13 23:28:43.218666   The Vertical banner [type-id=292] is Not in the Test List\n\npages\\Elements\\ButtonOnVerticalBanner.py:51: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"worker_id","time":{"start":1702509869018,"stop":1702509869018,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"d","time":{"start":1702509869018,"stop":1702509871225,"duration":2207},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1702509871225,"stop":1702509871225,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1702509871225,"stop":1702509871225,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"go","time":{"start":1702509871225,"stop":1702509871225,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1702509871225,"stop":1702509871225,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1702509871225,"stop":1702509871225,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1702509871226,"stop":1702509871226,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n                Check the [Button] on the Vertical side banner at the bottom of the page.\n                For \"Authorized user\" role:\n                The trading platform page is opened depend on the banner [type-id]:\n                        Live mode if the banner in the Live mode banners list\n                        Demo mode if the banner in the Demo mode banners list\n                ","status":"failed","statusMessage":"AssertionError: \n2023-12-13 23:28:43.218666   The Vertical banner [type-id=292] is Not in the Test List","statusTrace":"self = <US_11-02-02-01_Shares_trading_test.TestSharesTradingItems object at 0x000001842D564AD0>\nworker_id = 'master'\nd = <selenium.webdriver.edge.webdriver.WebDriver (session=\"9a77e020dbef8fdfc076796c83ef940d\")>\ncur_language = 'pl', cur_country = 'gb', cur_role = 'NoReg'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/pl/trade-stocks'\n\n    @allure.step(\"Start test of button in block [Vertical banner]\")\n    # @pytest.mark.skip(reason=\"Skipped for debugging\")\n    def test_10_block_vert_banner_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password,\n            cur_item_link):\n        \"\"\"\n                Check the [Button] on the Vertical side banner at the bottom of the page.\n                For \"Authorized user\" role:\n                The trading platform page is opened depend on the banner [type-id]:\n                        Live mode if the banner in the Live mode banners list\n                        Demo mode if the banner in the Demo mode banners list\n                \"\"\"\n    \n        print(f\"\\n{datetime.now()}   Работает obj {self} с именем TC_11.02.02.01_10\")\n        build_dynamic_arg_v3(self, d, worker_id, cur_language, cur_country, cur_role,\n                             \"11.02.02\", \"Educations > Menu item [Shares trading]\",\n                             \".01_10\", \"Testing button in block [Vertical banner]\")\n    \n        check_language(cur_language)\n        if cur_language in [\"\", \"ar\", \"cn\"]:\n            Common().skip_test_for_language(cur_language)\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        # банеры должны открываться в Demo mode for US_00\n        banner00_ver_tpd = []\n        # банеры должны открываться в Live mode for US_00\n        banner00_ver_tp = []\n        # банеры должны открываться в Demo mode for US_01\n        banner01_ver_tpd = ['251', '253', '380', '168', '222', '393']\n        # банеры должны открываться в Live mode for US_01\n        banner01_ver_tp = ['198', '293', '381', '391', '426']\n    \n        test_element = ButtonOnVerticalBanner(d, cur_item_link)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link,\n                                        banner00_ver_tpd, banner00_ver_tp, banner01_ver_tpd, banner01_ver_tp)\n\ntests\\US_11_Education\\US_11-02-02_Shares_trading\\US_11-02-02-01_Shares_trading_test.py:348: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.Elements.ButtonOnVerticalBanner.ButtonOnVerticalBanner object at 0x000001842D996350>\nd = <selenium.webdriver.edge.webdriver.WebDriver (session=\"9a77e020dbef8fdfc076796c83ef940d\")>\ncur_language = 'pl', cur_country = 'gb', cur_role = 'NoReg'\nlink = 'https://capital.com/pl/trade-stocks', banner00_ver_tpd = []\nbanner00_ver_tp = []\nbanner01_ver_tpd = ['251', '253', '380', '168', '222', '393']\nbanner01_ver_tp = ['198', '293', '381', '391', '426']\n\n    def full_test_with_tpi(self, d, cur_language, cur_country, cur_role, link, banner00_ver_tpd, banner00_ver_tp,\n                           banner01_ver_tpd, banner01_ver_tp):\n        tpd = False\n        self.arrange_(link)\n    \n        # Checking if [SignUP for is popped up on the page]\n        page_signup_login = SignupLogin(d, link)\n        page_signup_login.check_popup_signup_form()\n    \n        data_id = self.element_click()\n        # проверка Demo mode\n        if data_id in banner00_ver_tpd or data_id in banner01_ver_tpd:\n            tpd = True\n        # проверка, что баннер учтен в матрице покрытия\n        if (data_id in banner00_ver_tp or data_id in banner01_ver_tp\n                or data_id in banner00_ver_tpd or data_id in banner01_ver_tpd):\n            test_element = AssertClass(d, link)\n            match cur_role:\n                case \"NoReg\":\n                    test_element.assert_signup(d, cur_language, link)\n                case \"Reg/NoAuth\":\n                    test_element.assert_login(d, cur_language, link)\n                case \"Auth\":\n                    if tpd:\n                        print(f\"{datetime.now()}   For Vertical banner [type-id={data_id}] Trading platform should be open \"\n                              f\"in Demo Mode =>\")\n                    else:\n                        print(f\"{datetime.now()}   For Vertical banner [type-id={data_id}] Trading platform should be open \"\n                              f\"in Live Mode =>\")\n                    test_element.assert_trading_platform_v4(d, link, tpd)\n        else:\n            print(f\"\\n{datetime.now()}   The Vertical banner [type-id={data_id}] is Not in the Test List \")\n>           assert False, f\"\\n{datetime.now()}   The Vertical banner [type-id={data_id}] is Not in the Test List \"\nE           AssertionError: \nE           2023-12-13 23:28:43.218666   The Vertical banner [type-id=292] is Not in the Test List\n\npages\\Elements\\ButtonOnVerticalBanner.py:51: AssertionError","steps":[{"name":"Start test of button in block [Vertical banner]","time":{"start":1702510117110,"stop":1702510123219,"duration":6109},"status":"failed","statusMessage":"AssertionError: \n2023-12-13 23:28:43.218666   The Vertical banner [type-id=292] is Not in the Test List \n","statusTrace":"  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcom-08IAlZho-py3.11\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\a\\SeleniumCapital\\SeleniumCapital\\tests\\US_11_Education\\US_11-02-02_Shares_trading\\US_11-02-02-01_Shares_trading_test.py\", line 348, in test_10_block_vert_banner_button\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link,\n  File \"D:\\a\\SeleniumCapital\\SeleniumCapital\\pages\\Elements\\ButtonOnVerticalBanner.py\", line 51, in full_test_with_tpi\n    assert False, f\"\\n{datetime.now()}   The Vertical banner [type-id={data_id}] is Not in the Test List \"\n","steps":[{"name":"Set preconditions","time":{"start":1702510117110,"stop":1702510122379,"duration":5269},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.edge.webdriver.WebDriver (session=\"9a77e020dbef8fdfc076796c83ef940d\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'pl'"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that form [Sign up] opened","time":{"start":1702510122404,"stop":1702510122486,"duration":82},"status":"passed","steps":[{"name":"Close form [Sign up]","time":{"start":1702510122410,"stop":1702510122486,"duration":76},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"timeout","value":"1"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click button [BUTTON_ON_VER_BANNER]","time":{"start":1702510122486,"stop":1702510123219,"duration":733},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.edge.webdriver.WebDriver (session=\"9a77e020dbef8fdfc076796c83ef940d\")>"},{"name":"cur_language","value":"'pl'"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_item_link","value":"'https://capital.com/pl/trade-stocks'"}],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e8e1057dfc8aa5ae","name":"Screenshot","source":"e8e1057dfc8aa5ae.png","type":"image/png","size":1046648},{"uid":"4b7d721a26017e2c","name":"stdout","source":"4b7d721a26017e2c.txt","type":"text/plain","size":1887}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"go::0","time":{"start":1702510459019,"stop":1702510461429,"duration":2410},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Language: pl / US_11.02.02 | Educations > Menu item [Shares trading]"},{"name":"feature","value":"Country: gb / Role: NoReg / TS_11.02.02 | Educations > Menu item [Shares trading]"},{"name":"story","value":"TC_11.02.02.01_10 | Testing button in block [Vertical banner]"},{"name":"tag","value":"us_11_02_02"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-02-02_Shares_trading"},{"name":"suite","value":"US_11-02-02-01_Shares_trading_test"},{"name":"subSuite","value":"TestSharesTradingItems"},{"name":"host","value":"fv-az1564-735"},{"name":"thread","value":"2332-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-02-02_Shares_trading.US_11-02-02-01_Shares_trading_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'gb'"},{"name":"cur_item_link","value":"'https://capital.com/pl/trade-stocks'"},{"name":"cur_language","value":"'pl'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'NoReg'"},{"name":"go","value":"'edge'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["us_11_02_02"]},"source":"dcd16e7a00981b37.json","parameterValues":["'gb'","'https://capital.com/pl/trade-stocks'","'pl'","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'NoReg'","'edge'"]}