name: 3. Ubuntu, ReTests
on:
#  push:
  workflow_dispatch:
  
permissions:
  contents: write

#  schedule:
#    - cron: '00 13 * * *'
#    - cron: '10 06 * * *'

jobs:
  tests:
    name: I. Building environment and testing the capital.com website
    runs-on: ubuntu-latest
    steps:
      - name: 1. Check out this repo, master branch
        uses: actions/checkout@v4
        with:
          ref: master

      - name: 2.1. Install Python
        if: always()
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.7"

      - name: 3.1. Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      
      - name: 3.3. Install neofetch
        if: always()
        run: brew install neofetch

      - name: For Run hwinfo.py first time
        if: always()
        run: pip3 install psutil
      - name: For Run hwinfo.py first time
        if: always()
        run: pip3 install speedtest
      - name: Run hwinfo.py first time
        if: always()
        run: python3 tests/hwinfo.py

      - name: 4. install Zbar for QReader
        if: always()
        run: sudo apt-get install libzbar0

      - name: 4. install Poetry
        if: always()
        run: pip3 install poetry

      - name: 5. install dependencies
        if: always()
        run: poetry install --sync

      - name: Poetry Run Python3 hwinfo.py
        if: always()
        run: poetry run python3 tests/hwinfo.py

      - name: Python3 hwinfo.py
        if: always()
        run: python3 tests/hwinfo.py

      - name: 8. Run WATC_ReTest
        if: always()
        continue-on-error: true
#        run: poetry run pytest -vv tests/ReTests/WATC_ReTests.py
        run: poetry run pytest -vv -n auto tests/ReTests/ReTests.py
#        run: poetry run pytest -n auto -vv tests/ReTests/WATC_ReTests.py

      - name: 9. Upload artifact "allure-results"
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results/
          retention-days: 7

  generate_and_deploy_report:
    name: II. Generate & Deploy Allure report
    runs-on: ubuntu-latest
    if: always()
    needs: [ tests ]

    steps:
      - name: 1. Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: 2. Download Artifacts
        uses: actions/download-artifact@v3
        id: download
        if: always()
        continue-on-error: true
        with:
          name: allure-results
          path: allure-results

      - name: 3. Generate allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          allure_report: allure-report
          gh_pages: gh-pages
          allure_history: allure-history
          ref: gh-pages
          path: gh-pages
          keep_reports: 80

      - name: 4. Deploy allure_report to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #          personal_token: ${{ secrets.GITHUB_TOKEN }}
          #          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          publish_dir: ./allure-history
          commit_message: ${{ github.event.head_commit.message }}

      - name: 12. Send telegram message on push
        uses: appleboy/telegram-action@master
        if: always()
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          #           disable_web_page_preview: true
          message: |
            Message from GitHub CI Actions
            
            Testing of the "Capital.com" web application in the "Windows/Edge" environment is completed!
            
            See allure-result testing: https://${{ github.actor }}.github.io/SeleniumCapital/
            Tests Repository: ${{ github.repository }}