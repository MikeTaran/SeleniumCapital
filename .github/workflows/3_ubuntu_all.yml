name: 3. Ubuntu, All US
on:
#  push:
  workflow_dispatch:
  
#permissions:
#  contents: write

#  schedule:
#    - cron: '00 13 * * *'
#    - cron: '10 06 * * *'

jobs:
  tests:
    name: I. Building environment and testing the capital.com website
#     runs-on: macos-latest
    runs-on: ubuntu-latest
    steps:
      - name: 1. Check out this repo, master branch
        uses: actions/checkout@v4
        with:
          ref: master

#      - name: Install Chrome
#        uses: browser-actions/setup-chrome@latest
#      - name: Install Firefox
#        uses: riccione/setup_firefox@v1
#      - name: Check Chromium version
#        run: chromium-browser --version
#
      - name: 2.1. Install Python
        if: always()
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.6"

      - name: 3.1. Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      
      - name: 3.3. Install neofetch
        if: always()
        run: brew install neofetch

#      - name: 3.4. Install python-tk@3.11 for ReTest
#        if: always()
#        run: brew install python-tk@3.11
#
      - name: For Run hwinfo.py first time
        if: always()
        run: pip3 install psutil
      - name: For Run hwinfo.py first time
        if: always()
        run: pip3 install speedtest

      - name: Run hwinfo.py first time
        if: always()
        run: python3 tests/hwinfo.py

      - name: 4. install Zbar for QReader
        if: always()
        run: sudo apt-get install libzbar0

      - name: 4. install Poetry
        if: always()
        run: pip3 install poetry

      - name: Run hwinfo.py
        if: always()
        run: python3 tests/hwinfo.py

      - name: 5. install dependencies
        if: always()
#        run: poetry update
        run: poetry install --sync

      - name: Run hwinfo.py
        if: always()
        run: poetry run python3 tests/hwinfo.py

      - name: 6. Check code for errors by flake8 and format code with black
        if: always()
        uses: ricardochaves/python-lint@v1.4.0
        with:
          python-root-list: ""
          use-pylint: false
          use-pycodestyle: false
          use-flake8: true
          use-black: false
          use-mypy: false
          use-isort: false
          extra-pylint-options: ""
          extra-pycodestyle-options: ""
          extra-flake8-options: "--count --benchmark --ignore=E501,E999,F401,F631,W191,W503"
          extra-black-options: ". -S"
          extra-mypy-options: ""
          extra-isort-options: ""

      - name: Run hwinfo.py
        if: always()
        run: poetry run python3 tests/hwinfo.py

      - name: 8. Run US_11-01-01 (Мила Д/Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-01-01_Learning_hub/US_11-01-01_Learning_hub.py
        continue-on-error: true

      - name: 8. Run US_11-01-02 (Мила Д/Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-01-02_Basics_of_trading/US_11-01-02_Basics_of_trading_test.py
        continue-on-error: true

      - name: 8. Run US_11-01-03 test (Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03-00_cfd_trading_guide_test.py
        continue-on-error: true
      - name: 8. Run US_11-01-03-01 (Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03-01_cfd_trading_guide_test.py
        continue-on-error: true

      - name: 8. Run US_11.01.04.00 test (Сулейман/Андрей/Саша)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-01-04_spread_betting_guide/us_11-01-04-00_spread_betting_guide_test.py
        continue-on-error: true
      - name: 8. Run US_11.01.04.01 test (Сулейман/Андрей/Саша)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-01-04_spread_betting_guide/us_11-01-04-01_spread_betting_guide_test.py
        continue-on-error: true

      - name: 8. Run US_11-01-05 (Мила Д/Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-01-05_Trading_courses/US_11-01-05-00_Trading_courses_test.py
        continue-on-error: true
      - name: 8. Run US_11-01-05-01_test (Мила Д/Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-01-05_Trading_courses/US_11-01-05-01_Trading_courses_test.py
        continue-on-error: true

      - name: 8. Run US_11-01-06 (Сулейман/Андрей/Михаил)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-01-06_investmate_app/us_11-01-06_investmate_app_test.py
        continue-on-error: true

      - name: 8. Run US_11-01-07 (Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-01-07_Glossary/US_11-01-07-00_Glossary_of_trading_terms_test.py
        continue-on-error: true
      - name: 8. Run US_11-01-07-01 (Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-01-07_Glossary/US_11-01-07-01_Glossary_of_trading_terms_test.py
        continue-on-error: true

      - name: 8. Run US_11.02.01 (Мила Д/Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-01_Market_guides/US_11-02-01_Market_guides_test.py
        continue-on-error: true

      - name: 8. Run US_11.02.02.00 test (Михаил)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-02_Shares_trading/US_11-02-02-00_Shares_trading_test.py
        continue-on-error: true
      - name: 8. Run US_11.02.02.01 test (Михаил)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-02_Shares_trading/US_11-02-02-01_Shares_trading_test.py
        continue-on-error: true

      - name: 8. Run US_11.02.03 pre test (Сулейман/Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-03_Commodities_trading/us_11-02-03_commodities_trading_pre_test.py
        continue-on-error: true
      - name: 8. Run US_11.02.03 test (Сулейман/Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-03_Commodities_trading/us_11-02-03_commodities_trading_test.py
        continue-on-error: true

      - name: 8. Run US_11.02.04.00 (Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-04_Forex_trading/US_11-02-04-00_Forex_trading_test.py
        continue-on-error: true
      - name: 8. Run US_11.02.04.01 (Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-04_Forex_trading/US_11-02-04-01_Forex_trading_test.py
        continue-on-error: true

      - name: 8. Run US_11.02.05 pre test (Сулейман/Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-05_Cryptocurrency_trading/us_11-02-05_cryptocurrency_trading_pre_test.py
        continue-on-error: true
      - name: 8. Run US_11.02.05 test (Сулейман/Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-05_Cryptocurrency_trading/us_11-02-05_cryptocurrency_trading_test.py
        continue-on-error: true

      - name: 8. Run US_11.02.06.00 test (Андрей)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06-00_indices_trading_test.py
        continue-on-error: true
      - name: 8. Run US_11.02.06.01 (Андрей)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06-01_indices_trading_test.py
        continue-on-error: true

##      - name: ls- la
##        if: always()
##        run: ls -la
##
##      - name: 9. Upload artifact "pytest.log"
##        if: always()
##        uses: actions/upload-artifact@v3
##        with:
##          name: pytest.log
##          path: log/pytest.log
##
      - name: 8. Run US_11-02-07 (Сулейман, Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-07_ETF_trading/us_11-02-07_etf_trading_test.py
        continue-on-error: true

      - name: 8. Run us_11.03.01.00 test (Мила П)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-03-01_trading_strategies_guide/US_11-03-01-00_trading_strategies_guide_test.py
        continue-on-error: true
      - name: 8. Run us_11.03.01.01 test(Мила П)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-03-01_trading_strategies_guide/US_11-03-01-01_trading_strategies_guide_test.py
        continue-on-error: true

      - name: 8. Run us_11-03-02 (Andrey)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-03-02_Day_trading/us_11-03-02_day_trading_test.py
        continue-on-error: true

      - name: 8. Run us_11-03-03 (Анна/Мила П)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-03-03_Trend_Trading/US_11-03-03_Trend_Trading_test.py
        continue-on-error: true

      - name: 8. Run US_11-03-04 (Андрей)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-03-04_Position_Trading/US_11-03-04_Position_Trading_test.py
        continue-on-error: true

      - name: 8. Run US_11-03-05 (Андрей)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-03-05_Swing_Trading/US_11-03-05_Swing_Trading_test.py
        continue-on-error: true

      - name: 8. Run US_11-03-07 (Андрей)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-03-07_What_is_a_margin/US_11-03-07_What_is_a_margin_test.py
        continue-on-error: true

      - name: 8. Run US_11-03-08-00 test (Мила П/Саша)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-03-08_Trading_psychology_guide/US_11-03-08-00_trading_psychology_guide_test.py
        continue-on-error: true
      - name: 8. Run US_11-03-08-01 test (Мила П/Саша)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-03-08_Trading_psychology_guide/US_11-03-08-01_trading_psychology_guide_test.py
        continue-on-error: true

      - name: Run hwinfo.py
        if: always()
        run: poetry run python3 tests/hwinfo.py

      - name: 9. Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Run hwinfo.py
        if: always()
        run: poetry run python3 tests/hwinfo.py

      - name: 10. Generate allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          allure_report: allure-report
          gh_pages: gh-pages
          allure_history: allure-history
          ref: gh-pages
          path: gh-pages
          keep_reports: 80

      - name: Run hwinfo.py
        if: always()
        run: poetry run python3 tests/hwinfo.py

      - name: 11.1 Deploy allure_report to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
#          github_token: ${{ secrets.MY_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          publish_dir: ./allure-history
          commit_message: ${{ github.event.head_commit.message }}
          # force_orphan: true

      - name: Run hwinfo.py
        if: always()
        run: poetry run python3 tests/hwinfo.py

#      - name: 12. Send telegram message on push
#        uses: appleboy/telegram-action@master
#        if: always()
#        with:
#          to: ${{ secrets.TELEGRAM_TO_ALEXTOM22 }}
##           to: ${{ secrets.TELEGRAM_TO }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
##           disable_web_page_preview: true
#          message: |
#            Message from GitHub CI Actions
#
#            Testing of the "Capital.com" web application in the "macOS/Chrome" environment is completed!
#
#            See allure-result testing: https://${{ github.actor }}.github.io/TestCapitalCom/
##             Tests Repository: https://github.com/${{ github.repository }}
